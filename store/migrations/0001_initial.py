# Generated by Django 4.2.5 on 2023-12-31 10:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='название')),
                ('slug_name', models.SlugField(unique=True, verbose_name="'slug' значение")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='store.category', verbose_name='родительская категория')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'unique_together': {('slug_name', 'parent')},
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='название')),
                ('description', models.TextField(null=True, verbose_name='описание')),
                ('currency_sign', models.CharField(default='₽', help_text='Значение, для подстановки в HTML. &#x20bd - знак рубля', max_length=50, verbose_name='отображение знака')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Валюта',
                'verbose_name_plural': 'Валюты',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='название')),
                ('slug_name', models.SlugField(verbose_name="'slug' значение")),
                ('description', models.TextField(verbose_name='описание')),
                ('quantity_per_unit', models.DecimalField(decimal_places=3, help_text='количество товара в единице размерности (1.000 кг; 0.500 л)', max_digits=10, verbose_name='количество за ед.')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='цена')),
                ('image', models.ImageField(blank=True, help_text='Загрузите картинку (желательно, но не обязательно). Картинка загрузится в папку static/products/', null=True, upload_to='static/products/', verbose_name='картинка')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.category', verbose_name='категория')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.currency', verbose_name='валюта')),
            ],
            options={
                'verbose_name': 'Продукт',
                'verbose_name_plural': 'Продукты',
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='название')),
                ('description', models.TextField(null=True, verbose_name='описание')),
                ('conversion_factor', models.FloatField(default=1.0, help_text='Коэффициент для перевода к стандартным величинам (допустим из грамм в килограммы и т.д.)', verbose_name='коэффициент')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Размерность',
                'verbose_name_plural': 'Размерности',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, verbose_name='оценка')),
                ('comment', models.TextField(verbose_name='текст отзыва')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='пользователь')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='store.product', verbose_name='продукт')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
            },
        ),
        migrations.CreateModel(
            name='ProductDiscount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.PositiveIntegerField(verbose_name='значение скидки')),
                ('is_percentage', models.BooleanField(default=True, help_text='Если не процентная, то по постоянное значение', verbose_name='процентная скидка')),
                ('start_date', models.DateTimeField(verbose_name='Дата и время начала действия скидки')),
                ('end_date', models.DateTimeField(verbose_name='Дата и время окончания действия скидки')),
                ('is_active', models.BooleanField(default=True, verbose_name='скидка активна')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='discount', to='store.product', verbose_name='продукт')),
            ],
            options={
                'verbose_name': 'Скидка на продукты',
                'verbose_name_plural': 'Скидки на продукты',
            },
        ),
        migrations.CreateModel(
            name='ProductDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating_mean', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, verbose_name='средний рейтинг')),
                ('review_count', models.PositiveIntegerField(default=0, verbose_name='число отзывов')),
                ('sold_value', models.PositiveIntegerField(default=0, verbose_name='количество продаж')),
                ('quantity_in_stock', models.PositiveIntegerField(default=0, verbose_name='количество на складе')),
                ('is_available', models.BooleanField(default=True, verbose_name='доступность к покупке')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='store.product', verbose_name='продукт')),
            ],
            options={
                'verbose_name': 'Подробности о продукте',
                'verbose_name_plural': 'Подробности о продуктах',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.unit', verbose_name='размерность'),
        ),
    ]
